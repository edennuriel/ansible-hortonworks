---
- set_fact: outer_loop="{{ item }}"
- set_fact: meta_group="meta-Group_{{cluster_name}}{{sep}}{{item.role}}"

- name: Add nodes to hadoop-cluster and {{ outer_loop.role }} groups
  add_host:
    name: "{{ hostvars[local_loop].openstack.name }}"
    ansible_host: "{{ (outer_loop.public_ip|default(false)== true) | ternary(hostvars[local_loop].openstack.public_v4,hostvars[local_loop].openstack.private_v4) }}"
    ansible_ssh_host: "{{ (outer_loop.public_ip|default(false)== true) | ternary(hostvars[local_loop].openstack.public_v4,hostvars[local_loop].openstack.private_v4) }}"
    ansible_user: "{{ cloud_config.admin_username|default('root') }}"
    ansible_ssh_private_key_file: "{{ cloud_config.ssh.privatekey }}"
    ansible_become_user: root
    groups: hadoop-cluster, {{ outer_loop.role }}
  loop_control:
    loop_var: local_loop
  when: outer_loop.count > 0
  with_items: "{{ groups[meta_group] }}"

- name: Add node to the ambari-server group 
  add_host:
    name: "{{ groups[meta_group] | first }}"
    ansible_host: "{{ (outer_loop.public_ip|default(false)== true) | ternary(hostvars[groups[meta_group] | first].openstack.public_v4,hostvars[groups[meta_group] | first].openstack.private_v4) }}"
    ansible_ssh_host: "{{ (outer_loop.public_ip|default(false)== true) | ternary(hostvars[groups[meta_group] | first].openstack.public_v4,hostvars[groups[meta_group] | first].openstack.private_v4) }}"
    ansible_user: "{{ cloud_config.admin_username|default('root') }}"
    ansible_ssh_private_key_file: "{{ cloud_config.ssh.privatekey }}"
    ansible_become_user: root
    groups: ambari-server
  when: outer_loop.ambari_server is defined



